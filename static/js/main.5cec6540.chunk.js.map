{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","Text","setText","Fragment","style","color","heading","background","value","onChange","event","target","rows","e","preventDefault","newText","toUpperCase","showAlert","toLowerCase","endsWith","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5cec6540.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n\r\n          {/* <div className={`form-check mx-4 text-${props.mode==='light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleGreen} type=\"checkbox\" value=\"\" id=\"flexCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n              Enable Green Mode\r\n            </label>\r\n          </div> */}\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpclick =(e)=>{\r\n        e.preventDefault();\r\n        // console.log(\"Uppercase was clicked\" + Text);\r\n        let newText = Text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upper Case\", \"success\");\r\n    }\r\n\r\n    const handleDownclick =(e)=>{\r\n        e.preventDefault();\r\n        // console.log(\"Uppercase was clicked\" + Text);\r\n        let newText = Text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower Case\", \"success\");\r\n    }\r\n    \r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [Text, setText] = useState('Enter text here');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark' ? 'white' : 'black'}}>\r\n            <form>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" style={{background: props.mode==='#042743' ? 'grey' : 'white', color: props.mode==='#042743' ? 'white' : 'black'}} value={Text} onChange={handleOnChange} id=\"myBox\" rows='8'></textarea>\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpclick}>Convert to uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleDownclick}>Convert to lowercase</button>\r\n            </form>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color: props.mode==='dark' ? 'white' : 'black'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{Text.endsWith(\" \") ? Text.split(\" \").length-1 : Text.split(\" \").length} words, {Text.length} characters</p>\r\n            <p>{0.008*Text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{Text.length>0? Text:\"Enter something in textbox to preview\"}</p>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  // const [mode1, setGreen] = useState('light');\n\n  const toggleMode = ()=>{\n    if (mode === 'light') {\n      setMode('dark');\n      // setGreen('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light'); \n      // setGreen('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n\n  // const toggleGreen = ()=>{\n  //   if(mode1!=='green'){\n  //     if (mode==='light') {\n  //       setGreen('green');\n  //     }\n  //     else{\n  //       setGreen('green'); \n  //     }\n\n  //     document.body.style.backgroundColor='#00FF00';\n  //     showAlert(\"Green Mode has been enabled\", \"success\");\n  //   }\n  //   else{\n  //     if(mode==='light'){\n  //       setMode('light');\n  //       setGreen('light');\n  //       document.body.style.backgroundColor='white';\n  //       showAlert(\"Green Mode has been disabled\", \"danger\");\n  //     }\n  //     else{\n  //       setMode('dark');\n  //       setGreen('dark');\n  //       document.body.style.backgroundColor='#042743';\n  //       showAlert(\"Green Mode has been disabled\", \"danger\");\n  //     }\n  //   }\n  // }\n\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    }, 2000)\n  }\n\n  return (\n    <>\n      {/* <BrowserRouter> */}\n        <Navbar title='Textutils' mode={mode} toggleMode={toggleMode}/>\n\n        <Alert alert={alert} />\n\n        <div className=\"container my-3\">\n\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About/>}> */}\n              {/* <About/> */}\n            {/* </Route> */}\n            {/* <Route ecaxt path=\"/\" element={<TextForm showAlert={showAlert} heading='Heading' mode={mode}/>}> */}\n              <TextForm showAlert={showAlert} heading='Heading' mode={mode}/>\n            {/* </Route> */}\n          {/* </Routes> */}\n\n          {/* <About/> */}\n        </div>\n        \n      {/* </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}